import telebot
from telebot import types
import random
import wikipedia
import time
import sqlite3
import time
import re
from telebot import util
from dotenv import load_dotenv
import os

wikipedia.set_lang("ru")
def getwiki(s):
    try:
        ny = wikipedia.page(s)
        wikitext=ny.content[:1000]
        wikimas=wikitext.split('.')
        wikimas = wikimas[:-1]
        wikitext2 = ''
        for x in wikimas:
            if not('==' in x):
                if(len((x.strip()))>3):
                   wikitext2=wikitext2+x+'.'
            else:
                break
        wikitext2=re.sub('\([^()]*\)', '', wikitext2)
        wikitext2=re.sub('\([^()]*\)', '', wikitext2)
        wikitext2=re.sub('\{[^\{\}]*\}', '', wikitext2)
        return wikitext2
    except Exception as e:
        return '–í —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º. '


#admin
admins_id = 5668034921



#Admin_message
ad= None
ad2 = None
ad3 =None

#google
google_seach = 'https://www.google.com/search?q='

#time
result=time.localtime()

time='\n' +str(result.tm_mday) + '.' + str(result.tm_mon) + '.' + str(result.tm_year) + '    '  +str(result.tm_hour) + ':' + str(result.tm_min) + ':' + str(result.tm_sec ) 


connect = sqlite3.connect('users.db',check_same_thread=False) 
cursor = connect.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS login_id(
        chat_id INT,
        name TEXT,
        surename TEXT,
        username TEXT,
        time INT
)''')
    
connect.commit()

chat_idd = None


#Start Code!
#---------------------------

time_test = 0000

load_dotenv()
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(os.getenv("TOKEN"))

if result.tm_hour == 7:
    bot.delete_message(5668034921, time_test)
    time_test = bot.send_message(5668034921, '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...‚ö†Ô∏èüõ†Ô∏è‚è±Ô∏è\n–°–µ—Ä–≤–µ—Ä –ø—Ä–æ–≤–µ—Ä–µ–Ω!üë®‚Äçüíª –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ!ü§ñ‚úÖ\n–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:' + time + '.')
    time_test = time_test.id
    
@bot.message_handler(commands=['start'])
def start_message(message):
    
    #SQL info
    chats_id = message.chat.id
    usernames = message.chat.username
    names = message.chat.first_name
    surenames = message.chat.last_name
    SQLtime= f'{result.tm_mday}.{result.tm_mon}.{result.tm_year} {result.tm_hour}:{result.tm_min}:{result.tm_sec} '

    
    #SQL mehanik
    
    
    cursor.execute(f'SELECT chat_id FROM login_id WHERE chat_id = {chats_id}')
    data = cursor.fetchone()
    if data is None:
        if message.chat.type == 'private':
            cursor.execute("INSERT INTO login_id (chat_id, name, surename, username, time) VALUES (?,?,?,?,?)",[chats_id, names, surenames, usernames, SQLtime])
            if message.chat.id != admins_id :
                bot.send_message(5668034921, '–ê–¥–º–∏–Ω, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é! –£ –Ω–∞—Å –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!!!')
        connect.commit()
        
    
    bot.send_message(message.chat.id,     '–ü—Ä–∏–≤–µ—Ç,' + str(message.chat.first_name) + '!')
    bot.send_message(message.chat.id, '–ß—Ç–æ–∂, –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ –¥–∞–≤–∞–π –∫ –¥–µ–ª—É!üòâ\n\n–Ø - –±–æ—Ç-—Å–ª–æ–≤–∞—Ä—å. –û–¥–Ω–∏–º —Å–ª–æ–≤–æ–º: –ü–æ–∏—Å–∫–æ–≤–∏–∫ —Å–ª–æ–≤ –∏–∑ –í–∏–∫–∏–ø–µ–¥–∏–∏.üîéüìô –£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ—á—Ç–∏ –Ω–∞ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—é! \n<span class = "tg-spoiler">(–∫–æ–Ω–µ—á–Ω–æ –∂–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–µ, –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏–ª–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏). </span> \n\n –¢–∞–∫ –∂–µ —è –ø—Ä–∏–Ω–∏–º–∞—é –≤ –ø–æ–∏—Å–∫ –∏–º–µ–Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π –∏ –∫–æ–º–ø–∞–Ω–∏–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.', parse_mode='html')
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ(—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ)üëá')
    

def send_message_to_users(message):
    connect = sqlite3.connect('users.db',check_same_thread=False) 
    cursor = connect.cursor() 
    cursor.execute('SELECT chat_id FROM login_id')
    users = cursor.fetchall()
    info = ''
    for el in users:
        info = el[0]
        bot.send_message(info, message)
    connect.commit()
	
@bot.message_handler(commands=['send'])
def send(message): 	
    if message.chat.id == 5668034921:
        text = message.text.replace('/send', '').strip()
        send_message_to_users(text)
        bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
  
    
# –ê–¥–º–∏–Ω–∫–∞(–∫–æ–º–∞–Ω–¥—ã)
 
@bot.message_handler(commands=['admin'])
def admins_message(message):
    if message.chat.id == 5668034921:
        global ad3
        ad3 = message.id
        global ad
        ad = bot.send_message(5668034921, '–†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è, –ê–¥–º–∏–Ω!' )
        markup = types.InlineKeyboardMarkup()
        btn1 = markup.add(telebot.types.InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data = 'users'))
        markup.add(telebot.types.InlineKeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data = 'users_all'))
        markup.add(telebot.types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'back'))

        global ad2
        ad2= bot.send_message(message.chat.id, '–ö–æ–º–∞–Ω–¥—ã', reply_markup = markup)
        
    if message.chat.id != 5668034921:
        bot.send_message(message.chat.id, '–≠—Ç–∞ –∫–æ–º–∞–¥–Ω–∞ –∞–¥–º–∏–Ω–∞! –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ —ç—Ç–∏ –ø—Ä–∞–≤–∞!')
 
# 1824053958


    





@bot.message_handler(commands=['autor'])
def send_message(message):
    bot.send_message(message.chat.id, '–°–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞: @NikolaGream\n–ê–∫–∞—É–Ω—Ç –∞–∫—Ç—É–∞–ª–µ–Ω –∏ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –µ–º—É –≤ —Å–ª—É—á–∞–µ —Å–±–æ–µ–≤ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º —Å –±–æ—Ç–æ–º.\n–ü—Ä–æ—Å—å–±–∞, –Ω–µ –ø–∏—Å–∞—Ç—å –ø–æ –ø—É—Å—Ç—è–∫–∞–º –∏–ª–∏ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã!\n\n    –° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n                 –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è!')

@bot.message_handler(commands=['help'])
def send_message(message):
    bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ãüëÄ:\n\n‚Ä¢–ß—Ç–æ —ç—Ç–æ –∑–∞ –±–æ—Ç –∏ –∫–∞–∫–∏–µ —É –Ω–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–∏?\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–æ–≤(–≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –¥–∞–∂–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ —É—á—ë–±–µ –∏–ª–∏ –∂–µ –¥–ª—è —Å–≤–æ–∏—Ö –Ω—É–∂–¥ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤). –¢–∞–∫ –∂–µ —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ —Ä–∞–∑–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏(–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Ç–æ–∂–µ), –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Ç.–¥.\n\n‚Ä¢–ö—Ç–æ –∞–≤—Ç–æ—Ä –±–æ—Ç–∞?\n–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –∏ —è–≤–ª—è–µ—Ç—å—Å—è —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n–ù–∞–∂–º–∏—Ç–µ /autor –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!')
    
def handle_text(message):
    mil =0
    sus= bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∫–∞... |')
    for lop in range(1):
        
        bot.edit_message_text(chat_id=message.chat.id, message_id=sus.id,text='–ó–∞–≥—Ä—É–∑–∫–∞... /') 
        bot.edit_message_text(chat_id=message.chat.id, message_id=sus.id, text='–ó–∞–≥—Ä—É–∑–∫–∞... -')
        bot.edit_message_text(chat_id=message.chat.id, message_id=sus.id, text= '–ó–∞–≥—Ä—É–∑–∫–∞... \ ')
        bot.edit_message_text(chat_id=message.chat.id, message_id=sus.id, text='–ó–∞–≥—Ä—É–∑–∫–∞... |')
        mil =+ 1
        if mil == 5:
            break
  

    bot.reply_to(message, getwiki(message.text) + f'\n--------------------\n–ü–æ–¥—Ä–æ–±–Ω–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ç—É—Ç: {google_seach}{message.text}.')
    bot.delete_message(message.chat.id, sus.id)

sub_msg = None
'''
def nok(message):   
    global sub_msg    
    for k in status:
        if k != bot.get_chat_member(chat_id=-1001915322163, user_id = message.chat.id).status:  
            markup = types.InlineKeyboardMarkup() 
            markup= types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton(text='–ö–∞–Ω–∞–ª', url='https://t.me/bhytrc')
            btn1 = telebot.types.InlineKeyboardButton(text='–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data = 'sub')
            markup.add(btn,btn1) 
            sub_msg=bot.send_message(message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!', reply_markup=markup)
            break

status = ['creator', 'administrator', 'member']
'''

@bot.message_handler(content_types=["text"])
def reg(message):
    handle_text(message)
    '''
    num_s = 0
    for i in status:
        num_s = num_s + 1
        if i == bot.get_chat_member(chat_id=-1001915322163, user_id = message.chat.id).status:
            num_s =0
            handle_text(message)
            break
        
        if num_s == 3:
            nok(message)
'''
            
  
    
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    global txt
    #-----------------------–Ω–∞–∑–∞–¥
    if call.data == 'back':
        bot.delete_message(call.message.chat.id, ad2.id)
        bot.delete_message(call.message.chat.id, ad3.id)
   #------------------------–Ω–µ –Ω–∞–∑–∞–¥
    if call.data != 'back':
        connect = sqlite3.connect('users.db',check_same_thread=False) 
        cursor = connect.cursor()
        #----------------------—Ç–∞–±–ª–∏—Ü–∞
        if call.data == 'users_all':
            cursor.execute('SELECT * FROM login_id')
            users = cursor.fetchall()
            info = ' '
            for el in users:
                info += f'{el[0]} - {el[1]} - {el[2]} - @{el[3]} - {el[4]} \n-------------\n'
            for message1 in util.smart_split(info, 3000):
                bot.send_message(call.message.chat.id, f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n{message1}')
            bot.delete_message(call.message.chat.id, ad.id)
            bot.delete_message(call.message.chat.id, ad2.id)
            bot.delete_message(call.message.chat.id,ad3 ) 
            connect.commit()
            
            cursor.execute('SELECT chat_id FROM login_id')
            users = cursor.fetchall()
            info = ' '
            for el in users:
                info = f'{el[0]}'
                
       #-----------------------—Å–ø–∏—Å–æ–∫
        elif call.data == 'users':
            cursor.execute('SELECT name, username FROM login_id')
            users = cursor.fetchall()
            info = ' '
            for el in users:
                info += f'{el[0]} - @{el[1]}\n-------------\n'
            for message2 in util.smart_split(info, 3000):
                bot.send_message(call.message.chat.id, f'–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: \n{message2}')
            bot.delete_message(call.message.chat.id, ad.id)
            bot.delete_message(call.message.chat.id, ad2.id)
            bot.delete_message(call.message.chat.id,ad3 ) 
    connect.commit()
'''
    if call.data == 'sub':
        status = ['creator', 'administrator', 'member']
        for i in status:
            if i == bot.get_chat_member(chat_id=-1001915322163, user_id = call.message.chat.id).status:
                bot.delete_message(call.message.chat.id, sub_msg.id)
                handle_text(call.message)
                break
        bot.answer_callback_query(callback_query_id=call.id, text='–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!')
            '''    

      
        
            
bot.polling()